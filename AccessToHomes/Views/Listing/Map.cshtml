@model AccessToHomes.Models.ViewModels.MapVM
@{
    ViewBag.Title = "Map";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style type="text/css">
    #map_canvas {
        width: 100%;
        height: 500px;
    }

    #wrapper {
        position: relative;
    }

    #over_map {
        position: absolute;
        top: 0px;
        left: 0px;
        background-color: black;
        z-index: 99;
        width: 100%;
        height: 100%;
        opacity: .6;
        display: none;
    }

    .dv-listing-peek {
        padding-top: 15px;
    }

    .list-img {
        height: 100px;
        overflow: hidden;
    }

    .dv-listing-peek img {
        border: 1px solid black;
        width: 100%;
    }

    .search-bar {
        /*position: relative;*/
        top: 10px;
        padding: 5px;
    }
</style>

<div class="container search-bar">
    <div class="row">
        <div class="col-md-6">

            <div class="form-horizontal">
                <div class="input-group">

                    <label for="searchPostcode" style="display:none;">Postcode</label>
                    @Html.TextBoxFor(m => Model.Postcode, new { @class = "form-control" })
                    <div class="ddl-select input-group-btn" style="width:150px">
                        @Html.DropDownListFor(model => model.Distance, Model.DistanceList, "Within....", new { @class = "form-control" })
                    </div>
                    <span class="input-group-btn">
                        <input type="submit" value="Search" class="btn btn-default" onclick="SearchMap()" />
                        </span>
</div>
            </div>
        </div>
    </div>
</div>
    <div class="row">
        <div class="col-md-1" id="peek-div" style="display:none; ">
            <div class="dv-listing-peek">
                <img class="peek-img" src="/images/home.svg" />
                <a class="peek-link" href="#"><h4 class="peek-title">Title</h4></a>
                <p class="peek-text">text</p>
            </div>
        </div>
        <div class="col-md-12" id="dv-map-container">
            <div id="wrapper">
                <div id="map_canvas"></div>

                <div id="over_map">

                </div>
            </div>
        </div>
    </div>





    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script>

            var markers = [];
            var CircleToSearch;

            

            var addLoading = function () {
                // clear markers
                DeleteMarkers();
                if (CircleToSearch != null)
                    CircleToSearch.setMap(null);
                $("#over_map").show();

            };

            var removeLoading = function () { $('#overlay').remove(); };

            function DeleteMarkers() {
                //Loop through all the markers and remove
                for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null);
                }
                markers = [];
            };

            function AddPoints(data, radius, center, map) {

                var infowindow = null;

                data.forEach(function (entry) {
                    var coor = entry.LongLat.replace('(', '').replace(')', '').split(',');


                    var homeIcon = {
                        url: "/images/home.svg",
                        scaledSize: new google.maps.Size(20, 20)
                    }


                    var ltln = new google.maps.LatLng(coor[0], coor[1])
                    if (pointInCircle(ltln, radius, center, map)) {
                        var marker = new google.maps.Marker({
                            map: map, position: ltln, title: entry.Title,
                            icon: homeIcon
                        });
                        markers.push(marker);
                        marker.addListener('click', function () {
                            //if (infowindow) {
                            //    infowindow.close();
                            //}
                            //infowindow = new google.maps.InfoWindow({
                            //    content: InfoWindowContent(entry.Title, entry.Price)
                            //});
                            //infowindow.open(map, marker);

                            updatePeek(entry.Title, entry.ShortDescription, entry.Images[0], entry.Id);

                        });
                    }
                });
            }

            function SearchMap() {
                addLoading();

                var geocoder = new google.maps.Geocoder();

                var postcode = $("#Postcode").val() + ", UK";
                var radi = parseFloat($("#Distance").val());
                var myOptions = {
                    zoom: 10,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                }


                //alert('Postcode : ' + postcode + ', Radius : ' + radi);

                var map = window.Map;

                geocoder.geocode({ 'address': postcode }, function (results, status) {
                    var location = results[0].geometry.location;
                    map.setCenter(location);

                    CircleToSearch = new google.maps.Circle({
                        strokeColor: '	#808080',
                        strokeOpacity: 0.8,
                        strokeWeight: 1,
                        fillColor: '#000000',
                        fillOpacity: 0.05,
                        map: map,
                        center: location,
                        radius: radi
                    });

                    map.fitBounds(CircleToSearch.getBounds());
                    $.ajax({
                        url: '/api/listingapi/getlistings',
                        type: 'GET',
                        dataType: 'json',
                        success: function (data, textStatus, xhr) {
                            AddPoints(data, radi, location, map);
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            console.log('Error in Operation');
                        },
                        complete: function (data) {
                            $("#over_map").hide();
                        }
                    });
                });
            }

            function pointInCircle(point, radius, center, map) {
                return (google.maps.geometry.spherical.computeDistanceBetween(point, center) <= radius)
            }


            function initialize() {
                var geocoder = new google.maps.Geocoder();
                var myLatlng = new google.maps.LatLng(55.8599876, -4.255227699999978);
                var myOptions = {
                    zoom: 10,
                    center: myLatlng,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                }

                var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
                window.Map = map;
                geocoder.geocode({ 'address': "G1, UK" }, function (results, status) {
                    if (status == google.maps.GeocoderStatus.OK) {
                        var location = results[0].geometry.location;
                        map.setCenter(location);

                        if ($("#Postcode").val().length > 0) {
                            SearchMap();
                        }

                    } else {
                        alert("Geocode was not successful for the following reason: " + status);
                    }
                });



            }
            function loadScript(_callback) {
                var script = document.createElement("script");
                script.type = "text/javascript";
                script.src = "http://maps.google.com/maps/api/js?key=AIzaSyBqKTtuD649T6vQQ_VFHvJXjCyDiiqMQxQ&libraries=geometry&callback=initialize";
                document.body.appendChild(script);


            }


            function InfoWindowContent(title, price) {
                var returnString = '<div><h3>' + title + '</h3><p>£' + price + ' pcm</p></div>';
                return returnString;
            }

            function updatePeek(title, text, img, id) {

                $("#dv-map-container").switchClass('col-md-12', 'col-md-10', 1000);
                $("#peek-div").switchClass('col-md-1', 'col-md-2', 1000);

                var options = {};
                $("#peek-div").show("slide", options, 500);                
                $(".peek-img").attr("src", img);
                $(".peek-link").attr("href", "/listing/view/" + id);
                $(".peek-title").html(title);
                $(".peek-text").html(text);

                

            }

            loadScript();

        </script>
    }
